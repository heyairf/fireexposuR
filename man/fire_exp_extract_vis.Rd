% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fire_exp_extract_vis.R
\name{fire_exp_extract_vis}
\alias{fire_exp_extract_vis}
\title{Visualize by extracted exposure}
\usage{
fire_exp_extract_vis(
  values_ext,
  method = c("max", "mean"),
  classify = c("local", "landscape"),
  map = FALSE
)
}
\arguments{
\item{values_ext}{Spatvector of points or polygons from \code{\link[=fire_exp_extract]{fire_exp_extract()}}}

\item{method}{character, either \code{"max"} or \code{"mean"}. If \code{values_ext} are
polygons the default is \code{"max"}.This parameter is ignored when \code{values_ext}
are point features.}

\item{classify}{character, either \code{"local"} or \code{"landscape"} to specify
classification scheme to use. The default is \verb{"local}"}

\item{map}{Boolean. When \code{TRUE}, a map is returned as a ggplot object. The
default is \code{FALSE}.}
}
\value{
a summary table is returned as a data frame object, Unless:
\code{map = TRUE}: a ggplot object
}
\description{
\code{fire_exp_extract_vis()} standardizes the visualization of
outputs from \code{\link[=fire_exp_extract]{fire_exp_extract()}} as a summary table or a map by classifying
exposure into predetermined exposure classes.

Landscape classification breaks are:
\itemize{
\item Low (0-20\%)
\item Moderate (20-40\%)
\item High (40-60\%),
\item Very High (60-80\%)
\item Extreme (80-100\%)
}

Local classification breaks are:
\itemize{
\item Nil (0\%)
\item Low (>0-15\%)
\item Moderate (15-30\%)
\item High (30-45\%)
\item Extreme (45\%+)
}
}
\examples{
# read example hazard data ----------------------------------
filepath <- "extdata/hazard.tif"
haz <- terra::rast(system.file(filepath, package = "fireexposuR"))
# read example AOI polygon geometry
filepath <- "extdata/builtsimpleexamplegeom.csv"
g <- read.csv(system.file(filepath, package = "fireexposuR"))
v <- terra::vect(as.matrix(g), "polygons", crs = haz)
# generate random points within polygon
pts <- terra::spatSample(v, 200)
# ----------------------------------------------------------

exp <- fire_exp(haz)

vals_exp <- fire_exp_extract(exp, pts)

# summarize example points in a table
fire_exp_extract_vis(vals_exp, classify = "local")

# visualize example points in standardized map
fire_exp_extract_vis(vals_exp, map = TRUE)

}
