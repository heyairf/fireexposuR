% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fire_exp.R
\name{fire_exp}
\alias{fire_exp}
\title{Compute the wildfire exposure metric}
\usage{
fire_exp(hazard, tdist = c("l", "s", "r"), nonburnable)
}
\arguments{
\item{hazard}{a SpatRaster that represents hazardous fuels for the
transmission distance specified in tdist}

\item{tdist}{a character vector, can be: \code{"l"} for long-range
embers (Default), \code{"s"} for short-range embers or, \code{"r"} for radiant heat}

\item{nonburnable}{(optional) a SpatRaster that represents the non-burnable
landscape. Any cells that cannot receive wildfire (e.g. open water, rock)
and any cells that are not natural (e.g. built environment,
irrigated agricultural areas) should be of value 1, all other cells
should be NODATA. This parameter should be provided if preparing data
for \code{\link[=fire_exp_validate]{fire_exp_validate()}}}
}
\value{
A SpatRaster object of exposure values between 0-1
}
\description{
\code{fire_exp()} computes the wildfire exposure metric from a hazard fuel raster.
The hazard fuel raster must be prepared by the user. Forbes and Beverly 2024
(manuscript in preparation)
details suggestions for data acquisition and preparation in accordance with
various budget limitations and user experience levels. Computing wildfire
exposure for different transmission distances may require unique hazard
rasters for each distance. See Beverly et al. 2021, Beverly et al. 2010, and
Schmidt et al. 2024 for further references for hazard raster preparation.
}
\details{
There are minimum raster resolution requirements for each transmission distance.
Radiant heat requires data of 10 m or finer, short-range embers 90 m or finer, and
long-range embers requires 150 m or finer.
}
\examples{
# read example hazard data ----------------------------------
filepath <- "extdata/hazard.tif"
haz <- terra::rast(system.file(filepath, package = "fireexposuR"))
# -----------------------------------------------------------

# compute long range exposure
exp <- fire_exp(haz, tdist = "l")
exp

# each transmission distance has a resolution requirement and exposure() will
# not run if resolution is too coarse
try(fire_exp(haz, tdist = "r"))

}
