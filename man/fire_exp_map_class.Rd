% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fire_exp_map_class.R
\name{fire_exp_map_class}
\alias{fire_exp_map_class}
\title{Map exposure with a classified scale}
\usage{
fire_exp_map_class(
  exposure,
  aoi,
  classify = c("local", "landscape", "custom"),
  class_breaks,
  zoom_level,
  title = "Classified Exposure"
)
}
\arguments{
\item{exposure}{SpatRaster (e.g. from \code{\link[=fire_exp]{fire_exp()}})}

\item{aoi}{(Optional) SpatVector of an area of interest to mask exposure}

\item{classify}{character, either \code{"local"}, \code{"landscape"}, or \code{"custom"},
to specify classification scheme to use. The default is \code{"local"}.
If set to \code{"custom"}: the parameter \code{class_breaks} must be used.}

\item{class_breaks}{vector of numeric values between 0-1 of the upper limits
of each custom class. Ignored unless \code{classify = "custom"}. See details.}

\item{zoom_level}{(Optional) numeric, set the zoom level for the basemap
based on the extent of your data if defaults are not appropriate. See
details. Defaults if:
\itemize{
\item \code{classify = "local"} or \code{"custom"} the zoom level default is \code{12}
\item \code{classify = "landscape"} the zoom level default is \code{7}
}}

\item{title}{(Optional) String. A custom title for the plot. The default
is \code{"Classified Exposure"}}
}
\value{
a standardized map is returned as a ggplot object
}
\description{
\code{fire_exp_map_class()} produces a standardized map by
classifying exposure into predetermined exposure classes.
}
\details{
This function returns a standardized map with basic cartographic elements.

The plot is returned as a ggplot object which can be exported/saved to
multiple image file formats.

This function visualizes the outputs from \code{\link[=fire_exp]{fire_exp()}} with classes.
Classes can be chosen from the pre-set \code{"local"} and \code{"landscape"} options,
or customized. To use a custom classification scheme, it should be defined
with a list of numeric vectors defining the upper limits of the breaks. A
Nil class is added automatically for exposure values of exactly zero.

Local classification breaks are predefined as \code{c(0.15, 0.3, 0.45, 1)}:
\itemize{
\item Nil (0)
\item 0 - 0.15
\item 0.15 - 0.3
\item 0.3 - 0.45
\item 0.45 - 1
}

Landscape classification breaks are predefined as \code{c(0.2, 0.4, 0.6, 0.8, 1)}:
\itemize{
\item Nil (0)
\item 0 - 0.2
\item 0.2 - 0.4
\item 0.4 - 0.6
\item 0.6 - 0.8
\item 0.8 - 1
}
\subsection{Spatial reference}{

This function dynamically pulls map tiles for a base map.
The inputs are projected to WGS 84/Pseudo-Mercator
(\href{https://epsg.io/3857}{EPSG:3857}) to align them with the map tiles.
}

\subsection{Zoom level}{

The map tile zoom level may need to be adjusted. If the base map is blurry,
increase the zoom level. Higher zoom levels will slow down the function, so
only increase if necessary. Reference the
\href{https://wiki.openstreetmap.org/wiki/Zoom_levels}{OpenStreetMap Wiki} for
more information on zoom levels.
}
}
\examples{
# read example hazard data
hazard_file_path <- "extdata/hazard.tif"
hazard <- terra::rast(system.file(hazard_file_path, package = "fireexposuR"))

# read example area of interest geometry
geom_file_path <- "extdata/polygon_geometry.csv"
geom <- read.csv(system.file(geom_file_path, package = "fireexposuR"))

# generate example area of interest polygon with geometry
aoi <- terra::vect(as.matrix(geom), "polygons", crs = hazard)

# compute exposure
exposure <- fire_exp(hazard)

fire_exp_map_class(exposure, aoi, classify = "local")

}
\seealso{
\code{\link[=fire_exp_map_class]{fire_exp_map_class()}}
}
